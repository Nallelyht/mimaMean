{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.scss","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/comment/comment.component.html","webpack:///./src/app/comment/comment.component.scss","webpack:///./src/app/comment/comment.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/new-remedy/new-remedy.component.html","webpack:///./src/app/new-remedy/new-remedy.component.scss","webpack:///./src/app/new-remedy/new-remedy.component.ts","webpack:///./src/app/remedy-detail/remedy-detail.component.html","webpack:///./src/app/remedy-detail/remedy-detail.component.scss","webpack:///./src/app/remedy-detail/remedy-detail.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/firebase.service.ts","webpack:///./src/app/services/new-remedy.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"app\\\">\\n  <app-navbar></app-navbar>\\n</div>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutesModule } from './app.routes';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\n\n// componentes\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { HomeComponent } from './home/home.component';\nimport { NewRemedyComponent } from './new-remedy/new-remedy.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { CommentComponent } from './comment/comment.component';\n\n// servicios\nimport { AuthService } from './services/auth.service';\nimport { NewRemedyService } from './services/new-remedy.service';\n\n// material design\nimport {\n  MatButtonModule,\n  MatCheckboxModule,\n  MatGridListModule,\n  MatCardModule,\n  MatMenuModule,\n  MatIconModule,\n  MatToolbarModule,\n  MatListModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonToggleModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatTooltipModule,\n  MatTreeModule\n} from '@angular/material';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport 'hammerjs';\nimport { RemedyDetailComponent } from './remedy-detail/remedy-detail.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    HomeComponent,\n    NavbarComponent,\n    NewRemedyComponent,\n    RemedyDetailComponent,\n    CommentComponent\n  ],\n  imports: [\n    AppRoutesModule,\n    HttpClientModule,\n    HttpModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatRadioModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatListModule,\n    MatMenuModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule\n  ],\n  entryComponents: [\n    NewRemedyComponent,\n    CommentComponent\n  ],\n  providers: [\n    AuthService,\n    NewRemedyService\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent } from './auth/auth.component';\nimport { HomeComponent } from './home/home.component';\nimport { RemedyDetailComponent } from './remedy-detail/remedy-detail.component';\n\nconst routes: Routes = [\n  { path: 'remedyDetail/:id', component: RemedyDetailComponent},\n  { path: 'auth', component: AuthComponent},\n  { path: 'home', component: HomeComponent},\n  { path: '**', pathMatch: 'full', redirectTo: 'home' }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutesModule {}\n","module.exports = \"<section *ngIf=\\\"isLogged\\\">\\n\\n  <form class=\\\"example-form\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm)\\\" ngNativeValidate>\\n    <h1 class=\\\"mat-h1\\\">Iniciar Sesión</h1>\\n    <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n      <mat-label>Correo Electrónico</mat-label>\\n      <input matInput [(ngModel)]=\\\"email\\\" type=\\\"email\\\" name=\\\"email\\\" required #emailUser=\\\"ngModel\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" minlength=\\\"7\\\">\\n    </mat-form-field>\\n    <div *ngIf=\\\"emailUser.invalid && emailUser.touched\\\" class=\\\"input-error-message\\\" >\\n      <div *ngIf=\\\"!passwordUser.dirty || passwordUser.touched\\\">\\n        Ingresa tu correo\\n      </div>\\n      <div *ngIf=\\\"emailUser.errors.pattern\\\">\\n        Debe ingresar un correo válido.\\n      </div>\\n    </div>\\n\\n    <mat-form-field class=\\\"example-full-width inputColor\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n      <mat-label>Contraseña</mat-label>\\n      <input matInput [(ngModel)]=\\\"password\\\"  type=\\\"password\\\" name=\\\"password\\\" required #passwordUser=\\\"ngModel\\\" min=\\\"1\\\">\\n    </mat-form-field>\\n    <div *ngIf=\\\"passwordUser.invalid && passwordUser.touched\\\" class=\\\"input-error-message\\\">\\n      <div *ngIf=\\\"!passwordUser.dirty || passwordUser.touched\\\">\\n        Ingresa tu contraseña\\n      </div>\\n    </div>\\n    <h2>\\n      Entra con Facebook <button (click)=\\\"loginWithFacebook()\\\" >Facebook Login</button>\\n    </h2>\\n    <h2>\\n      Entra con Google <button (click)=\\\"loginWithGoogle()\\\" >Facebook Login</button>\\n    </h2>\\n    <button  mat-raised-button class=\\\"btn\\\" [disabled]=\\\"emailUser.errors ||passwordUser.errors\\\">Entrar</button>\\n    <p>Ya tienes cuenta? <span (click)=\\\"isLogged=!isLogged\\\" >Click aquí</span></p>\\n  </form>\\n</section>\\n\\n\\n<section *ngIf=\\\"!isLogged\\\">\\n  <form class=\\\"example-form\\\" #signupForm=\\\"ngForm\\\" (ngSubmit)=\\\"signup(signupForm)\\\" ngNativeValidate>\\n    <h1 class=\\\"mat-h1\\\">Crear Cuenta</h1>\\n    <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n      <mat-label>Nombre de Usuario</mat-label>\\n      <input matInput  [(ngModel)]=\\\"username\\\" type=\\\"text\\\"  name=\\\"username\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n      <mat-label>Correo Electrónico</mat-label>\\n      <input matInput [(ngModel)]=\\\"email\\\" type=\\\"text\\\" name=\\\"email\\\">\\n    </mat-form-field>\\n    <div *ngIf=\\\"errorMail\\\" class=\\\"input-error-message\\\">\\n      Este correo electrónico ya está registrado\\n    </div>\\n    <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n      <mat-label>Contraseña</mat-label>\\n      <input matInput [(ngModel)]=\\\"password\\\"  type=\\\"password\\\" name=\\\"password\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n      <mat-label>Repite tu Contraseña</mat-label>\\n      <input matInput [(ngModel)]=\\\"password2\\\"  type=\\\"password\\\" name=\\\"password2\\\">\\n    </mat-form-field>\\n    <button  mat-raised-button class=\\\"btn\\\">Crear</button>\\n    <p>Ya tienes cuenta? <span (click)=\\\"isLogged=!isLogged\\\" >Click aquí</span></p>\\n  </form>\\n</section>\\n\\n\"","module.exports = \".example-form {\\n  margin: 100px auto 0;\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\nsection {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 85vh;\\n  max-width: 80%;\\n  margin: auto; }\\n\\nsection p > span {\\n    color: #e76297;\\n    cursor: pointer; }\\n\\nsection .input-error-message.ng-star-inserted {\\n    margin-top: -3%;\\n    color: red;\\n    margin-bottom: 5%;\\n    margin-left: 1%; }\\n\"","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FirebaseService } from '../services/firebase.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n  isLogged = false;\n  errorMail = false;\n  user = null;\n  newUser: any = {};\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private firebaseService: FirebaseService\n  ) {\n    if (sessionStorage.getItem('user')) {\n      this.router.navigate(['home']);\n    }\n  }\n\n  signup(auth) {\n    if (auth.value.password === auth.value.password2) {\n      this.newUser.username = auth.value.username;\n      this.newUser.password = auth.value.password;\n      this.newUser.email = auth.value.email;\n      this.authService.signup(this.newUser)\n    .subscribe(user => {\n      this.user = user;\n      sessionStorage.setItem('user', JSON.stringify(user));\n      this.router.navigate(['home']);\n    }, (err) => {\n      this.errorMail = true;\n    });\n    }\n  }\n\n  login(auth) {\n    this.authService.login(auth.value)\n    .subscribe(user => {\n      this.user = user;\n      sessionStorage.setItem('user', JSON.stringify(user));\n      this.router.navigate(['home']);\n    });\n  }\n\n  loginWithFacebook() {\n    this.firebaseService.loginWithFacebook();\n  }\n\n  loginWithGoogle() {\n    this.firebaseService.loginWithGoogle();\n  }\n\n  ngOnInit() { }\n\n}\n","module.exports = \"<section>\\n    <form #newCommentForm=\\\"ngForm\\\" (ngSubmit)=\\\"addComment(newCommentForm)\\\">\\n      <div class=\\\"title_button\\\">\\n        <button  mat-raised-button class=\\\"btn\\\">Crear</button>\\n        <h1 class=\\\"mat-h1\\\">\\n          Nuevo Comentario\\n        </h1>\\n      </div>\\n      <mat-form-field color=\\\"accent\\\" appearance=\\\"outline\\\">\\n        <mat-label>Descripcion</mat-label>\\n        <textarea matInput [(ngModel)]=\\\"description\\\" type=\\\"text\\\" required name=\\\"description\\\"></textarea>\\n      </mat-form-field>\\n    </form>\\n  </section>\"","module.exports = \"mat-form-field.mat-form-field {\\n  color: #106969;\\n  width: 95%;\\n  padding-left: 2.5%; }\\n\\n.title_button {\\n  display: flex;\\n  flex-direction: row-reverse;\\n  align-items: center;\\n  margin: 3%; }\\n\\nbutton.btn.mat-raised-button {\\n  align-self: baseline;\\n  margin-left: 30%; }\\n\\n.new_ingredients {\\n  display: inline-block;\\n  width: 57.5%; }\\n\\n.new_ingredients ul {\\n    display: inline-block;\\n    list-style: none; }\\n\\n.new_ingredients ul button.mat-button.mat-icon-button.ng-star-inserted {\\n      width: 20px;\\n      height: 20px;\\n      line-height: 20px; }\\n\\n.new_ingredients ul mat-icon.mat-icon.material-icons {\\n      font-size: 15px;\\n      width: 20px;\\n      height: 20px;\\n      line-height: 20px; }\\n\\n.input-error-message.ng-star-inserted {\\n  margin-top: -3%;\\n  color: red;\\n  margin-left: 2.5%; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.scss']\n})\nexport class CommentComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n    private bottomSheetRef: MatBottomSheetRef<CommentComponent>,\n  ) {}\n\n  ngOnInit() {\n  }\n  addComment(newComment) {\n    this.bottomSheetRef.dismiss();\n  }\n  openLink(event: MouseEvent): void {\n    this.bottomSheetRef.dismiss();\n    event.preventDefault();\n  }\n}\n","module.exports = \".grid-container {\\n\\tmargin: 30px 20px 20px;\\n}\\n\\n.dashboard-card {\\n\\tposition: absolute;\\n\\ttop: 15px;\\n\\tleft: 15px;\\n\\tright: 15px;\\n\\tbottom: 15px;\\n}\\n\\nbutton.more-button.mat-icon-button {\\n\\tposition: absolute;\\n\\ttop: 11px;\\n\\tleft: 1px;\\n}\\n\\n.dashboard-card-content {\\n\\ttext-align: center;\\n}\\n\\nbutton.mat-fab.mat-accent {\\n\\tposition: fixed;\\n\\tright: 4%;\\n\\ttop: 2%;\\n\\tz-index: 2;\\n}\\n\\nh3 {\\n\\tmargin: 0;\\n}\"","module.exports = \"<button *ngIf=\\\"!show()\\\" mat-fab (click)=\\\"openBottomSheet()\\\"><mat-icon>add</mat-icon></button>\\n<div class=\\\"grid-container\\\">\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\n    <mat-grid-tile *ngFor=\\\"let remedy of remedies\\\" [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            <a [routerLink]=\\\"['/remedyDetail']\\\" (click)=\\\"viewDetails(remedy._id)\\\">\\n              <h3>{{remedy.title}}</h3>\\n            </a> \\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Comentar</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <mat-list *ngFor=\\\"let ingredient of remedy.ingredients\\\">\\n            <mat-list-item>\\n              <p mat-line>{{ingredient}}</p>\\n            </mat-list-item>\\n          </mat-list>\\n          <div>{{remedy.description}}</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\nimport { MatBottomSheet } from '@angular/material';\nimport { NewRemedyComponent } from '../new-remedy/new-remedy.component';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { NewRemedyService } from '../services/new-remedy.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  remedies: any;\n  user = false;\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private bottomSheet: MatBottomSheet,\n    private authService: AuthService,\n    private router: Router,\n    private remediesService: NewRemedyService,\n  ) {\n      this.remediesService.getAllRemedies().subscribe(res => {\n        this.remedies = res;\n      });\n    }\n  ngOnInit() {\n    if (sessionStorage.getItem('user')) {\n      this.user = true;\n    }\n  }\n  openBottomSheet() {\n    const sheet = this.bottomSheet.open(NewRemedyComponent);\n\n    sheet.backdropClick().subscribe(() => {\n      console.log('dbclicked');\n    });\n    sheet.afterDismissed().subscribe((newRemedy) => {\n      this.remedies.push(newRemedy);\n    });\n  }\n  show() {\n    return this.authService.show();\n  }\n  viewDetails(idRemedy) {\n    this.router.navigate(['/remedyDetail/' + idRemedy], {\n      skipLocationChange: true\n    });\n  }\n\n}\n","module.exports = \"@import url('https://fonts.googleapis.com/css?family=Oregano');\\n.oregano {\\n\\tfont-family: 'Oregano';\\n}\\n.mat-sidenav-container {\\n\\tbackground: #fff;\\n}\\nh1 {\\n\\tfont-size: 2em;\\n\\ttext-align: center;\\n\\tdisplay: inline;\\n}\\nimg {\\n\\tvertical-align: middle;\\n\\twidth: 100px;\\n\\tpadding-left: 2%;\\n}\\n.blank-grow {\\n\\tflex: 1 1 auto;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n\\ttext-decoration: none;\\n}\\n.blank-grow:visited {\\n\\tcolor: #106969;\\n}\\n.mat-toolbar.mat-primary {\\n\\tbackground: #c1efdf;\\n\\tcolor: #106969;\\n\\theight: 80px;\\n}\\n.icon {\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n}\\n.icon .auth {\\n\\tpadding: 0 2%;\\n}\\nbutton.mat-button.mat-icon-button {\\n\\tright: 0;\\n\\tposition: absolute;\\n}\\nmat-sidenav.mat-drawer.mat-sidenav.ng-tns-c3-0.ng-trigger.ng-trigger-transform.mat-drawer-over.ng-star-inserted {\\n\\twidth: 30vw;\\n}\\na.mat-list-item {\\n\\tmargin-left: 9%;\\n\\tcolor: #106969;\\n}\\nspan.auth {\\n\\tcolor: #106969;\\n\\tfont-size: 1.2rem;\\n}\\n\\n\"","module.exports = \"<mat-sidenav-container fullscreen>\\n  <mat-sidenav #sidenav >\\n    <mat-nav-list>\\n        <button mat-button matSuffix mat-icon-button type=\\\"button\\\" aria-label=\\\"Clear\\\" (click)=\\\"sidenav.close()\\\">\\n            <mat-icon>close</mat-icon>\\n          </button>\\n      <a mat-list-item [routerLink]=\\\"['auth']\\\" style=\\\"\\n      margin-top: 30%;\\\" (click)=\\\"sidenav.close()\\\" *ngIf=\\\"show()\\\">\\n        <span class=\\\"auth\\\">Crear Cuenta</span>\\n      </a>\\n      <a mat-list-item [routerLink]=\\\"['auth']\\\" (click)=\\\"sidenav.close()\\\" *ngIf=\\\"show()\\\">\\n        <span class=\\\"auth\\\">Iniciar Sesión</span>\\n      </a>\\n      <a mat-list-item [routerLink]=\\\"['home']\\\" (click)=\\\"logout(); sidenav.close()\\\" style=\\\"margin-top: 30%;\\\">\\n        <span class=\\\"auth\\\" *ngIf=\\\"!show()\\\">Cerrar Sesión</span>\\n      </a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-toolbar color=\\\"primary\\\">\\n    <button mat-icon-button (click)=\\\"sidenav.open()\\\" fxHide=\\\"false\\\" fxHide.gt-sm>\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n    <a [routerLink]=\\\"['home']\\\" class=\\\"blank-grow\\\">\\n      <h1 class=\\\"oregano title\\\"> Me Dijo Mi Má</h1>\\n      <img src=\\\"../../assets/img/flor.png\\\" alt=\\\"flor\\\">\\n    </a>\\n<!--     <span class=\\\"icon\\\">\\n      <a [routerLink]=\\\"['auth']\\\"> Cuenta </a>\\n    </span> -->\\n  </mat-toolbar>\\n  <router-outlet></router-outlet>\\n</mat-sidenav-container>\"","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  user = false;\n  mode = new FormControl('push');\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {\n    if (sessionStorage.getItem('user') === null) {\n      this.user = true;\n    }\n  }\n  ngOnInit() {\n    if (sessionStorage.getItem('user') === null) {\n      this.user = true;\n    }\n  }\n\n  logout() {\n    this.user = false;\n    this.authService.logout();\n    this.router.navigate(['home']);\n  }\n  show() {\n    return this.authService.show();\n  }\n}\n","module.exports = \"<section>\\n  <form #newRemedyForm=\\\"ngForm\\\" (ngSubmit)=\\\"createRemedy(newRemedyForm)\\\" ngNativeValidate>\\n    <div class=\\\"title_button\\\">\\n      <button  mat-raised-button class=\\\"btn\\\">Crear</button>\\n      <h1 class=\\\"mat-h1\\\">\\n        Crear Remedio\\n      </h1>\\n    </div>\\n    <mat-form-field color=\\\"accent\\\" appearance=\\\"outline\\\">\\n      <mat-label>Titulo</mat-label>\\n      <input matInput  [(ngModel)]=\\\"title\\\" type=\\\"text\\\"  name=\\\"title\\\" #titleUser required>\\n    </mat-form-field>\\n    <mat-form-field color=\\\"accent\\\" appearance=\\\"outline\\\" style=\\\" width: 35%;\\\">\\n      <mat-label>Ingredientes</mat-label>\\n      <input matInput [(ngModel)]=\\\"ingredient\\\"  type=\\\"text\\\" name=\\\"ingredient\\\" #addIng=\\\"ngModel\\\" >\\n      <button mat-button *ngIf=\\\"ingredient\\\" matSuffix mat-icon-button type=\\\"button\\\" aria-label=\\\"Add\\\" (click)=\\\"addIngredient(ingredient, $event); ingredient='';\\\">\\n        <mat-icon>add</mat-icon>\\n      </button>\\n    </mat-form-field>\\n    <div *ngIf=\\\"addIng.touched && ingredients.length == 0\\\" class=\\\"input-error-message\\\">\\n      Debes agregar al menos un ingrediente\\n    </div>\\n    <div class=\\\"new_ingredients\\\">\\n      <ul *ngFor=\\\"let item of ingredients; let i = index\\\">\\n        <li>\\n          <span #oneIngredient>{{item}}</span>\\n          <button mat-button matSuffix mat-icon-button type=\\\"button\\\" (click)=\\\"removeIngredient(i, oneIngredient)\\\" >\\n            <mat-icon>close</mat-icon>\\n          </button></li>\\n      </ul>\\n    </div>\\n    <mat-form-field color=\\\"accent\\\" appearance=\\\"outline\\\">\\n      <mat-label>Descripcion</mat-label>\\n      <textarea matInput [(ngModel)]=\\\"description\\\" type=\\\"text\\\" required name=\\\"description\\\"></textarea>\\n    </mat-form-field>\\n  </form>\\n</section>\"","module.exports = \"mat-form-field.mat-form-field {\\n  color: #106969;\\n  width: 95%;\\n  padding-left: 2.5%; }\\n\\n.title_button {\\n  display: flex;\\n  flex-direction: row-reverse;\\n  align-items: center;\\n  margin: 3%; }\\n\\nbutton.btn.mat-raised-button {\\n  align-self: baseline;\\n  margin-left: 30%; }\\n\\n.new_ingredients {\\n  display: inline-block;\\n  width: 57.5%; }\\n\\n.new_ingredients ul {\\n    display: inline-block;\\n    list-style: none; }\\n\\n.new_ingredients ul button.mat-button.mat-icon-button.ng-star-inserted {\\n      width: 20px;\\n      height: 20px;\\n      line-height: 20px; }\\n\\n.new_ingredients ul mat-icon.mat-icon.material-icons {\\n      font-size: 15px;\\n      width: 20px;\\n      height: 20px;\\n      line-height: 20px; }\\n\\n.input-error-message.ng-star-inserted {\\n  margin-top: -3%;\\n  color: red;\\n  margin-left: 2.5%; }\\n\"","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material';\nimport { NewRemedyService } from '../services/new-remedy.service';\n\n@Component({\n  selector: 'app-new-remedy',\n  templateUrl: './new-remedy.component.html',\n  styleUrls: ['./new-remedy.component.scss']\n})\nexport class NewRemedyComponent implements OnInit {\n  ingredients = [];\n  newIngredient: any = {};\n\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n    private bottomSheetRef: MatBottomSheetRef<NewRemedyComponent>,\n    private remedyService: NewRemedyService\n  ) {}\n\n  openLink(event: MouseEvent): void {\n    this.bottomSheetRef.dismiss();\n    event.preventDefault();\n  }\n\n  ngOnInit() {\n  }\n\n  createRemedy(remedy) {\n    this.newIngredient.title = remedy.value.title;\n    this.newIngredient.description = remedy.value.description;\n    this.newIngredient.ingredients = this.ingredients;\n    this.newIngredient.idUser = JSON.parse(sessionStorage.getItem('user')).id;\n    console.log(this.newIngredient);\n\n    this.remedyService.createRemedy(this.newIngredient).subscribe(newRemedy => {\n      this.bottomSheetRef.dismiss(newRemedy);\n    });\n  }\n  addIngredient(ingredient, e) {\n    e.preventDefault();\n    this.ingredients.push(ingredient);\n  }\n  removeIngredient(index) {\n    const confirmation = confirm('¿Quieres eliminar el ingrediente ' + this.ingredients[index] + '?');\n    if (confirmation) {\n      this.ingredients.splice(index, 1);\n    } else {\n      return;\n    }\n  }\n}\n","module.exports = \"<section *ngIf=\\\"remedy\\\">\\n  <mat-card class=\\\"example-card\\\">\\n    <mat-card-header>\\n      <h2 class=\\\"mat-h1\\\">{{remedy.title}}</h2>\\n      <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n      <mat-card-title> Hola {{user.username}}</mat-card-title>\\n      <mat-card-subtitle>Autor: <small>{{remedy.idUser.username}}</small> </mat-card-subtitle>\\n    </mat-card-header>\\n<!--     <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\"> -->\\n    <mat-card-content>\\n      <ul  *ngFor=\\\"let ingredient of remedy.ingredients\\\">\\n        <li>{{ingredient}}</li>\\n      </ul>\\n      <p>\\n        {{remedy.description}}\\n      </p>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-button (click)=\\\"openBottomSheet()\\\">Comentar</button>\\n      <button mat-icon-button (click)=\\\"addFav($event)\\\">\\n          <mat-icon [ngStyle]=\\\"{'color': fav ? '#e96196' : 'gray'}\\\">favorite</mat-icon>\\n        </button>\\n    </mat-card-actions>\\n  </mat-card>\\n</section>\\n\"","module.exports = \".example-card {\\n  max-width: 65%; }\\n\\n.example-header-image {\\n  background-image: url(\\\"https://material.angular.io/assets/img/examples/shiba1.jpg\\\");\\n  background-size: cover; }\\n\\nsection {\\n  display: flex;\\n  justify-content: center;\\n  margin: 5%; }\\n\\nsection .mat-h1 {\\n    margin: 0 20%; }\\n\\nsection mat-icon {\\n    color: gray; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NewRemedyService } from '../services/new-remedy.service';\nimport { MatBottomSheet } from '@angular/material';\nimport { CommentComponent } from '../comment/comment.component';\n\n@Component({\n  selector: 'app-remedy-detail',\n  templateUrl: './remedy-detail.component.html',\n  styleUrls: ['./remedy-detail.component.scss']\n})\nexport class RemedyDetailComponent implements OnInit {\n\n  user: any;\n  remedy: any;\n  fav = false;\n  comments = [];\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private remedyService: NewRemedyService,\n    private bottomSheet: MatBottomSheet\n  ) {\n\n    this.route.params.subscribe(params => {\n      const idRemedy = this.route.snapshot.params['id'];\n      this.remedyService.getOneRemedy(idRemedy).subscribe(oneRemedy => {\n        console.log(oneRemedy);\n        this.remedy = oneRemedy;\n      });\n    });\n\n    this.user = JSON.parse(sessionStorage.getItem('user'));\n  }\n  addFav() {\n   this.fav = !this.fav;\n  }\n\n  ngOnInit() {\n  }\n  openBottomSheet() {\n    const sheet = this.bottomSheet.open(CommentComponent);\n\n    sheet.backdropClick().subscribe(() => {\n      console.log('dbclicked');\n    });\n    sheet.afterDismissed().subscribe((comment) => {\n      this.comments.push(comment);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Http, Response} from '@angular/http';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  // url = 'http://localhost:3000/api/';\n  url = '/api/';\n  constructor(\n    private http: Http\n  ) { }\n\n  signup(auth) {\n    return this.http.post(this.url + 'signup', auth)\n    .pipe(map(res => res.json()));\n  }\n\n  login(auth) {\n    return this.http.post(this.url + 'login', auth, {withCredentials: true})\n    .pipe(map(res => res.json()));\n  }\n\n\n  logout() {\n    sessionStorage.removeItem('user');\n    return this.http.get(this.url + 'logout').toPromise()\n      .then((res: Response) => res.json())\n      .catch(e => console.log(e));\n  }\n  show () {\n    if (sessionStorage.getItem('user') === null) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyATF58FiUn036PG-JWQIQ6miTMHpmnpXLw',\n  authDomain: 'mima-17403.firebaseapp.com',\n  databaseURL: 'https://mima-17403.firebaseio.com',\n  projectId: 'mima-17403',\n  storageBucket: '',\n  messagingSenderId: '844003263349'\n};\nfirebase.initializeApp(config);\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n  url = '/';\n  constructor() {}\n  provider = new firebase.auth.FacebookAuthProvider();\n  googleProvider = new firebase.auth.GoogleAuthProvider();\n\n  loginWithFacebook() {\n    firebase.auth().signInWithPopup(this.provider).then((snap) => {\n      console.log(snap);\n     /*  localStorage.setItem('facebookToken', JSON.stringify(snap.credential.accessToken));\n      localStorage.setItem('user', JSON.stringify(snap.user));\n      this._sendTokenToBackend(snap); */\n    });\n  }\n\n  loginWithGoogle() {\n    firebase.auth().signInWithPopup(this.googleProvider).then((snap) => {\n      console.log(snap.user);\n    });\n  }\n\n  _sendTokenToBackend(snap) {\n    const token = snap.credential.accessToken;\n    fetch(this.url + 'facebook/login', {\n      method: 'post',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })\n      .then((r) => {\n        if (!r.ok) {\n          throw new Error();\n        }\n        return r.json();\n      })\n      .then((res) => {\n        console.log(res);\n      });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Http, Response} from '@angular/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewRemedyService {\n  //  url = 'http://localhost:3000/api/remedies/';\n  url = '/api/remedies/';\n\nconstructor(private http: Http) {}\n\n  // get all remedies\n  getAllRemedies() {\n      return this.http.get(this.url).pipe(map((res: Response) => res.json()));\n  }\n  // get one remedy\n  getOneRemedy(id) {\n      return this.http.get(this.url + id)\n          .pipe(map((res: Response) => res.json()));\n  }\n\n  // create one remedy\n  createRemedy(obj) {\n      return this.http.post(this.url, obj)\n          .pipe(map((res: Response) => res.json()));\n  }\n\n  // edit one remedy\n  editOneRemedy(obj) {\n  return this.http.put(this.url + obj._id, obj)\n      .pipe(map((res: Response) => res.json()));\n  }\n\n  // delete one remedy richard\n  deleteRemedy(id) {\n      return this.http.delete(this.url + id)\n          .pipe(map((res: Response) => res.json()));\n  }\n  getNewRemedy() {\n      let remedy;\n      if (sessionStorage.getItem('newRemedy')) {\n          remedy = JSON.parse(sessionStorage.getItem('newRemedy'));\n        return remedy;\n      }\n      return;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}