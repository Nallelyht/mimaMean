{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.scss","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"app\\\">\\n  <app-navbar></app-navbar>\\n  <router-outlet></router-outlet>\\n</div>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutesModule } from './app.routes';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { HomeComponent } from './home/home.component';\n\n// material design\nimport {\n  MatButtonModule,\n  MatCheckboxModule,\n  MatGridListModule,\n  MatCardModule,\n  MatMenuModule,\n  MatIconModule,\n  MatToolbarModule,\n  MatListModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonToggleModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatTooltipModule,\n  MatTreeModule\n} from '@angular/material';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport 'hammerjs';\n\n@NgModule({\n  declarations: [ AppComponent, AuthComponent, HomeComponent, NavbarComponent ],\n  imports: [\n    AppRoutesModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatRadioModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatListModule,\n    MatMenuModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule\n  ],\n  providers: [],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent } from './auth/auth.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: 'auth', component: AuthComponent},\n  { path: 'home', component: HomeComponent},\n  { path: '**', pathMatch: 'full', redirectTo: 'home' }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutesModule {}\n","module.exports = \"<section *ngIf=\\\"isLogged\\\">\\n\\n  <form class=\\\"example-form\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"recibiendoElForm(loginForm)\\\" ngNativeValidate>\\n    <h2 class=\\\"mat-h1\\\">Iniciar Sesión</h2>\\n    <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n      <mat-label>Correo Electronico</mat-label>\\n      <input matInput [(ngModel)]=\\\"email\\\" type=\\\"email\\\" name=\\\"email\\\" required #emailUser=\\\"ngModel\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" minlength=\\\"7\\\">\\n    </mat-form-field>\\n    <div *ngIf=\\\"emailUser.invalid && emailUser.touched\\\" class=\\\"input-error-message\\\" >\\n      <div *ngIf=\\\"!passwordUser.dirty || passwordUser.touched\\\">\\n        Ingresa tu correo\\n      </div>\\n      <div *ngIf=\\\"emailUser.errors.pattern\\\">\\n        Debe ingresar un correo válido.\\n      </div>\\n    </div>\\n\\n    <mat-form-field class=\\\"example-full-width inputColor\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n      <mat-label>Contraseña</mat-label>\\n      <input matInput [(ngModel)]=\\\"password\\\"  type=\\\"password\\\" name=\\\"password\\\" required #passwordUser=\\\"ngModel\\\" min=\\\"1\\\">\\n    </mat-form-field>\\n    <div *ngIf=\\\"passwordUser.invalid && passwordUser.touched\\\" class=\\\"input-error-message\\\" >\\n      <div *ngIf=\\\"!passwordUser.dirty || passwordUser.touched\\\">\\n        Ingresa tu contraseña\\n      </div>\\n    </div>\\n    <button  mat-raised-button class=\\\"btn\\\" [disabled]=\\\"emailUser.errors ||passwordUser.errors\\\">Entrar</button>\\n    <p>Ya tienes cuenta? <span (click)=\\\"isLogged=!isLogged\\\" >Click aquí</span></p>\\n  </form>\\n</section>\\n\\n\\n<section *ngIf=\\\"!isLogged\\\">\\n  <form class=\\\"example-form\\\" #signupForm=\\\"ngForm\\\" (ngSubmit)=\\\"recibiendoElForm(signupForm)\\\" ngNativeValidate>\\n    <h2 class=\\\"mat-h1\\\">Crear Cuenta</h2>\\n    <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n      <input matInput  [(ngModel)]=\\\"username\\\" placeholder=\\\"Nombre de Usuario\\\" type=\\\"text\\\"  name=\\\"username\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n      <input matInput placeholder=\\\"Correo Electronico\\\" [(ngModel)]=\\\"email\\\" type=\\\"text\\\" name=\\\"email\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n      <input matInput placeholder=\\\"Contraseña\\\" [(ngModel)]=\\\"password\\\"  type=\\\"password\\\" name=\\\"password\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\" appearance=\\\"outline\\\">\\n      <input matInput placeholder=\\\"Contraseña\\\" [(ngModel)]=\\\"password2\\\"  type=\\\"password\\\" name=\\\"password2\\\">\\n    </mat-form-field>\\n    <button  mat-raised-button class=\\\"btn\\\">Crear</button>\\n    <p>Ya tienes cuenta? <span (click)=\\\"isLogged=!isLogged\\\" >Click aquí</span></p>\\n  </form>\\n</section>\\n\\n\"","module.exports = \".example-form {\\n  margin: 100px auto 0;\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\nh2 {\\n  text-align: center; }\\n\\nsection {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh; }\\n\\nsection p > span {\\n    color: #e76297;\\n    cursor: pointer; }\\n\\nsection .input-error-message.ng-star-inserted {\\n    margin-top: -3%;\\n    color: red;\\n    margin-bottom: 5%;\\n    margin-left: 1%; }\\n\"","import { Component, OnInit, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n  isLogged = true;\n  constructor(private elRef: ElementRef) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".grid-container {\\n  margin:100px 20px 20px;\\n}\\n\\n.dashboard-card {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content {\\n  text-align: center;\\n}\"","module.exports = \"<div class=\\\"grid-container\\\">\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\n    <mat-grid-tile *ngFor=\\\"let card of cards | async\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            {{card.title}}\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\"","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","module.exports = \"@import url('https://fonts.googleapis.com/css?family=Oregano');\\n.oregano {\\n\\tfont-family: 'Oregano';\\n}\\n.mat-sidenav-container {\\n  background: #fff;\\n}\\nh1 {\\n\\tfont-size: 2em;\\n\\ttext-align: center;\\n\\tdisplay: inline;\\n}\\nimg {\\n  vertical-align: middle;\\n  width: 100px;\\n  padding-left: 2%;\\n}\\n.blank-grow {\\n\\tflex: 1 1 auto;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n}\\n.mat-toolbar.mat-primary {\\n  background: #C1EFDF;\\n  color: #106969;\\n  height: 80px;\\n}\\n.icon{\\n  display: flex;\\n  align-items: center;\\n\\tjustify-content: center;\\n}\\n.icon .auth{\\n  padding: 0 2%;\\n}\\n\"","module.exports = \"<mat-sidenav-container fullscreen>\\n  <mat-sidenav #sidenav >\\n    <mat-nav-list>\\n      <a mat-list-item>\\n        <span class=\\\"auth\\\">Crear Cuenta</span>\\n      </a>\\n      <a mat-list-item>\\n        <span class=\\\"auth\\\">Iniciar Sesión</span>\\n      </a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-toolbar color=\\\"primary\\\">\\n    <button mat-icon-button (click)=\\\"sidenav.open()\\\" fxHide=\\\"false\\\" fxHide.gt-sm>\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n    <span class=\\\"blank-grow\\\">\\n      <h1 class=\\\"oregano title\\\"> Me Dijo Mi Má</h1>\\n      <img src=\\\"../../assets/img/flor.png\\\" alt=\\\"flor\\\">\\n    </span>\\n    <span class=\\\"icon\\\">\\n      <a [routerLink]=\\\"['auth']\\\"> Cuenta </a>\\n    </span>\\n  </mat-toolbar>\\n</mat-sidenav-container>\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n  mode = new FormControl('over');\n  }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}